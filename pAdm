#!/usr/bin/env python

import sys
import json

from Helper import Helper
from Config import Config
from servers.Apache import Apache

# installs = {
# 	'apache2 | nginx',
# 	'php | python | ruby',
# 	'relational db (mysql | postgre)',
# 	'nosql db (redis | mongo)',
# 	'sphinx | elastic',
# 	'git | svn',
#	'dependencies managers - composer, pear(for php)',
#	'build makers like gulp, Grunt',
# 	'framework',
#	'editors'
# }

# args = {
# 	'install',
# 	'update',
#	'configuration',
#   'delete'
# }
#
# curl -i https://api.github.com/users/sephirothus - rate limit

try:
	try:
		arg = sys.argv[1]
	except IndexError:
		arg = 'install'

	confClass = Config(arg)
	helper = Helper()
	conf = {}
	fileName = 'my_config.json'

	if helper.checkFile(fileName):
		with open(fileName) as data_file:
			conf = json.load(data_file)

		queue = confClass.createQueue(conf)
	else:
		queue = confClass.createQueue(confClass.createConf())
	
	question = ["We will " + arg + ":"]
	count = 1
	for el in queue:
		question.append(str(count) + '. ' + el.__class__.__name__)
		count += 1

	helper.createBlock(question)
	isOk = raw_input('is it ok? ').lower()

	if isOk[0] == 'y':
		distName = helper.getDist(conf)
		for el in queue:
			helper.createBlock(helper.ucfirst(arg) + ' ' + el.name)
			# checking
			check = helper.getMethod('check', el, distName)
			method = helper.getMethod(arg, el, distName)
			if check and getattr(el, check)():
				if arg != 'install' and method:
					getattr(el, method)()
				else:
					print el.name + " already installed"
			elif method:
				getattr(el, method)()

			if arg == 'install':
				# configuring
				if not hasattr(el, 'attrs'): el.attrs = {}
				configure = helper.getMethod('configure', el, distName)
				if configure:
					print "======= Configuring ======="
					getattr(el, configure)()

		helper.createBlock("All completed. Thanx for using pAdm:)")
	else:
		helper.createBlock("As you wish. Thanx for using pAdm:)")
	
except KeyboardInterrupt:
	print "\nBye:)"
	