#!/usr/bin/env python

import sys
import json
import os.path

from Helper import Helper
from Config import Config

# installs = {
# 	'apache2 | nginx',
# 	'php | python | ruby',
# 	'relational db (mysql | postgre)',
# 	'nosql db (redis | mongo)',
# 	'sphinx | elastic',
# 	'git | svn',
#	'dependencies managers - composer(for php)',
#	'build makers like gulp, Grunt',
# 	'framework'
# }

# args = {
# 	'install',
# 	'update'
# }

try:
	try:
		arg = sys.argv[1]
	except IndexError:
		arg = 'install'

	confClass = Config()
	helper = Helper()
	conf = {}
	fileName = 'my_config.json'

	if (os.path.isfile(fileName)):
		with open(fileName) as data_file:
			conf = json.load(data_file)

		queue = confClass.createQueue(conf)
	else:
		queue = confClass.createQueue(confClass.createConf())

	question = ["We will install:"]
	count = 1
	for el in queue:
		question.append(str(count) + '. ' + el.__class__.__name__)
		count += 1

	helper.createBlock(question)
	isOk = raw_input('is it ok? ').lower()

	if isOk == 'yes' or isOk == 'y':
		myDist = helper.getDist(conf)
		for el in queue:
			helper.createBlock("Installing " + el.name)
			if ('check' in dir(el) and el.check()) or ('check' + myDist in dir(el) and getattr(el, 'check' + myDist)()):
				print el.name + " already installed"
			else:
		 		getattr(el, 'install' + myDist)()

	helper.createBlock("Installation completed. Thanx for using pAdm:)")
	
except KeyboardInterrupt:
	print "\nBye:)"
	